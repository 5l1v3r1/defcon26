using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Diagnostics;
using System.Timers;
using EasyModbus;
using System.Net.Sockets;

namespace VirtualGasPipeline_HMI
{
    public partial class MainHMI : Form
    {
        public string Station_ipAddress;
        TcpClient client;
        NetworkStream stream;

        public MainHMI()
        {
            InitializeComponent();
        }

        public void ConnectToPLC()
        {
            client = new TcpClient(Station_ipAddress, 502);
            stream = client.GetStream();
        }

        public static string ByteArrayToString(byte[] ba, int size)
        {
            string hex = BitConverter.ToString(ba,8,size);
            return hex.Replace("-", " ");
        }

        public static string ByteArrayToASCII(byte[] ba, int size)
        {
            string ascii = "";

            //starting after the Modbus Header
            for (int i = 8; i < size+8; i++)
            {
                //valid chars
                if (ba[i] >= 0x20 && ba[i] <= 0x7E)
                {
                    ascii += System.Text.Encoding.ASCII.GetString(new[] { ba[i] }) + " ";
                }

                //invalid chars
                else
                {
                    ascii += ". ";
                }
            }

            return ascii;
        }

        public static byte[] StringToByteArray(string hex)
        {
            return Enumerable.Range(0, hex.Length)
                             .Where(x => x % 2 == 0)
                             .Select(x => Convert.ToByte(hex.Substring(x, 2), 16))
                             .ToArray();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            //Convert the textbox hex string to byte
            string send_str = send_textbox.Text.Replace(" ", String.Empty);
            Byte[] data_to_send = StringToByteArray(send_str);

            //Declare Modbus header and combine it with the data to send

            /******** TO USE AS A MODBUS UNITY TEST UTILITY ********/
            ///*
                Byte[] MB_header = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x01, 0x5a };
                MB_header[5] = (byte)(data_to_send.Length + 2);
                Byte[] data = new byte[MB_header.Length + data_to_send.Length];
                System.Buffer.BlockCopy(MB_header, 0, data, 0, MB_header.Length);
                System.Buffer.BlockCopy(data_to_send, 0, data, MB_header.Length, data_to_send.Length);
            //*/

            /******** TO USE AS A TCP/IP TEST UTILITY ********/
            /*
                Byte[] data = new byte[data_to_send.Length];
                System.Buffer.BlockCopy(data_to_send, 0, data, 0, data_to_send.Length);
            */

            //Send the packet
            stream.Write(data, 0, data.Length);

            //Get response
            data = new Byte[1024];
            Int32 responseSize = stream.Read(data, 0, data.Length);

            data_ascii_textbox.Text = ByteArrayToASCII(data, responseSize-8);
            data_hex_textbox.Text = ByteArrayToString(data, responseSize-8);
        }
    }
}
